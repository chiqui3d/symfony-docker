version: '3'

volumes:
  db_data: {}

networks:
  db:
  web:

services:
  mysql:
    build:
      context: ./
      dockerfile: ./docker/mysql/Dockerfile
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    restart: always
    container_name: ${PROJECT_NAME}-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      -  db_data:/var/lib/mysql
      - ./docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - db
  phpmyadmin:
    build:
      context: ./
      dockerfile: ./docker/phpmyadmin/Dockerfile
    restart: always
    container_name: ${PROJECT_NAME}-phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    ports:
      - "${PHPMYADMIN_PORT}:80"
    depends_on:
      - mysql
    networks:
      - db
  php:
    env_file:
      - ./.env
    build:
      context: ./
      dockerfile: ./docker/php-fpm/Dockerfile
      args:
        - PHP_VERSION=${PHP_VERSION}
    container_name: ${PROJECT_NAME}-php
    restart: always
    expose:
      - "9000"
    volumes:
      - ./app:${APP_SYMFONY_DIRECTORY}
      - ./logs/cron:/var/log/cron
      - ./logs/symfony:${APP_SYMFONY_DIRECTORY}/var/log
    working_dir: ${APP_SYMFONY_DIRECTORY}
    depends_on:
      - mysql
    networks:
      - db
      - web
  nginx:
    env_file:
      - ./.env
    build:
      context: ./
      dockerfile: ./docker/nginx/Dockerfile
    working_dir: ${APP_SYMFONY_DIRECTORY}
    container_name: ${PROJECT_NAME}-nginx
    restart: always
    ports:
      - "80:80"
    environment:
      - VIRTUAL_HOST=${VIRTUAL_HOST}
    depends_on:
      - php
    volumes:
      - ./app:${APP_SYMFONY_DIRECTORY}
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./logs/nginx:/var/log/nginx
    networks:
      web:
        aliases:
          - ${VIRTUAL_HOST}
